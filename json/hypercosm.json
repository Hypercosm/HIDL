{
  "name": "hypercosm",
  "interfaces": [
    {
      "name": "Object",
      "docs": "The root interface, that all interfaces inherit from and\nall objects implement\n",
      "version": [
        1,
        0,
        0
      ],
      "methods": [
        {
          "name": "list_interfaces",
          "docs": "Remove the object from the object list\n\nFuture attempts to make calls on the object ID **MUST** fail.\n\nThe resources associated with the object may be released, but the\nobject ID may not be reused, we have plenty of them\n\nIt is an error to remove the root singleton (id 0)\n",
          "args": [],
          "ret": {
            "Array": {
              "Primitive": "String"
            }
          }
        },
        {
          "name": "release",
          "docs": "Get all interfaces implemented by an object\n\nThe interfaces will be listed in the format `{namespace}.{extension}.{interface_name}.{version}`\n",
          "args": [],
          "ret": null
        }
      ],
      "events": []
    },
    {
      "name": "Root",
      "docs": "Singleton with known id 0\n\nThis is the only object that is known at the start of connection\nand is used to discover other objects\n",
      "version": [
        0,
        1,
        0
      ],
      "methods": [
        {
          "name": "list_extensions",
          "docs": "List the extensions implemented by the conected node\n",
          "args": [],
          "ret": {
            "Array": {
              "Primitive": "String"
            }
          }
        },
        {
          "name": "ping",
          "docs": "Check the conection status\n",
          "args": [],
          "ret": null
        },
        {
          "name": "get_object_by_id",
          "docs": "",
          "args": [
            {
              "name": "id",
              "ty": {
                "Primitive": "Uuid"
              }
            }
          ],
          "ret": {
            "Primitive": "Object"
          }
        },
        {
          "name": "get_object_by_name",
          "docs": "Get the id of a singleton by the name of the interface\n",
          "args": [
            {
              "name": "name",
              "ty": {
                "Primitive": "String"
              }
            }
          ],
          "ret": {
            "Primitive": "Object"
          }
        }
      ],
      "events": []
    }
  ],
  "types": [],
  "extensions": [
    {
      "name": "asset_delivery",
      "version": [
        0,
        1,
        0
      ],
      "docs": "Delivers assets\n",
      "interfaces": [
        {
          "name": "asset_delivery",
          "docs": "Singleton for asset delivery\n",
          "version": [
            0,
            1,
            0
          ],
          "methods": [
            {
              "name": "fetch_by_id",
              "docs": "",
              "args": [
                {
                  "name": "id",
                  "ty": {
                    "Primitive": "Uuid"
                  }
                }
              ],
              "ret": {
                "Custom": "Asset"
              }
            },
            {
              "name": "fetch_by_name",
              "docs": "",
              "args": [
                {
                  "name": "name",
                  "ty": {
                    "Primitive": "String"
                  }
                }
              ],
              "ret": {
                "Custom": "Asset"
              }
            },
            {
              "name": "fetch_by_ids",
              "docs": "",
              "args": [
                {
                  "name": "ids",
                  "ty": {
                    "Array": {
                      "Primitive": "Uuid"
                    }
                  }
                }
              ],
              "ret": {
                "Array": {
                  "Custom": "Asset"
                }
              }
            },
            {
              "name": "fetch_by_names",
              "docs": "",
              "args": [
                {
                  "name": "names",
                  "ty": {
                    "Array": {
                      "Primitive": "String"
                    }
                  }
                }
              ],
              "ret": {
                "Array": {
                  "Custom": "Asset"
                }
              }
            },
            {
              "name": "getId",
              "docs": "",
              "args": [
                {
                  "name": "name",
                  "ty": {
                    "Primitive": "String"
                  }
                }
              ],
              "ret": {
                "Primitive": "Uuid"
              }
            }
          ],
          "events": [
            {
              "name": "load_assets",
              "docs": "",
              "args": [
                {
                  "name": "assets",
                  "ty": {
                    "Array": {
                      "Custom": "Asset"
                    }
                  }
                }
              ],
              "ret": null
            },
            {
              "name": "unload_assets",
              "docs": "",
              "args": [
                {
                  "name": "assets",
                  "ty": {
                    "Array": {
                      "Primitive": "Uuid"
                    }
                  }
                }
              ],
              "ret": null
            }
          ]
        }
      ],
      "types": [
        {
          "name": "Asset",
          "docs": " An asset: the type is given by TODO ",
          "kind": {
            "Struct": {
              "fields": [
                {
                  "name": "id",
                  "ty": {
                    "Primitive": "Uuid"
                  }
                },
                {
                  "name": "name",
                  "ty": {
                    "Primitive": "String"
                  }
                },
                {
                  "name": "data",
                  "ty": {
                    "Array": {
                      "IntType": "U8"
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "world",
      "version": [
        0,
        1,
        0
      ],
      "docs": "",
      "interfaces": [
        {
          "name": "world",
          "docs": "",
          "version": [
            0,
            1,
            0
          ],
          "methods": [],
          "events": [
            {
              "name": "add_entities",
              "docs": "",
              "args": [
                {
                  "name": "entities",
                  "ty": {
                    "Array": {
                      "Custom": "EntityInfo"
                    }
                  }
                }
              ],
              "ret": null
            },
            {
              "name": "update_entities",
              "docs": "",
              "args": [
                {
                  "name": "entities",
                  "ty": {
                    "Array": {
                      "Custom": "EntityInfo"
                    }
                  }
                }
              ],
              "ret": null
            },
            {
              "name": "remove_entities",
              "docs": "",
              "args": [
                {
                  "name": "entities",
                  "ty": {
                    "Array": {
                      "Custom": "Entity"
                    }
                  }
                }
              ],
              "ret": null
            }
          ]
        },
        {
          "name": "Entity",
          "docs": "",
          "version": [
            0,
            1,
            0
          ],
          "methods": [
            {
              "name": "interact",
              "docs": "",
              "args": [],
              "ret": null
            }
          ],
          "events": []
        }
      ],
      "types": [
        {
          "name": "EntityInfo",
          "docs": "",
          "kind": {
            "Struct": {
              "fields": [
                {
                  "name": "assetId",
                  "ty": {
                    "Primitive": "Uuid"
                  }
                },
                {
                  "name": "entity",
                  "ty": {
                    "Custom": "Entity"
                  }
                },
                {
                  "name": "transformation",
                  "ty": {
                    "Primitive": "Matrix4x4"
                  }
                },
                {
                  "name": "flags",
                  "ty": {
                    "Custom": "EntityFlags"
                  }
                }
              ]
            }
          }
        },
        {
          "name": "EntityFlags",
          "docs": " This should be flags, but isnt yet ",
          "kind": {
            "Enum": {
              "backing": "VU64",
              "fields": [
                {
                  "name": "None"
                },
                {
                  "name": "Interactable"
                },
                {
                  "name": "Collidable"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "execution_context",
      "version": [
        0,
        1,
        0
      ],
      "docs": "",
      "interfaces": [
        {
          "name": "execution_context",
          "docs": "",
          "version": [
            0,
            1,
            0
          ],
          "methods": [
            {
              "name": "load_wasm_module",
              "docs": "",
              "args": [
                {
                  "name": "assetId",
                  "ty": {
                    "Primitive": "Uuid"
                  }
                },
                {
                  "name": "exports",
                  "ty": {
                    "Dictionary": {
                      "key": {
                        "Primitive": "String"
                      },
                      "value": {
                        "Primitive": "String"
                      }
                    }
                  }
                }
              ],
              "ret": {
                "IntType": "VU64"
              }
            },
            {
              "name": "load_lua_script",
              "docs": "",
              "args": [
                {
                  "name": "assetId",
                  "ty": {
                    "Primitive": "Uuid"
                  }
                }
              ],
              "ret": {
                "IntType": "VU64"
              }
            },
            {
              "name": "load_inline_lua_script",
              "docs": "",
              "args": [
                {
                  "name": "script",
                  "ty": {
                    "Primitive": "String"
                  }
                }
              ],
              "ret": {
                "IntType": "VU64"
              }
            },
            {
              "name": "begin_execution",
              "docs": "",
              "args": [
                {
                  "name": "module_or_script",
                  "ty": {
                    "IntType": "VU64"
                  }
                },
                {
                  "name": "entry_point",
                  "ty": {
                    "Primitive": "String"
                  }
                }
              ],
              "ret": null
            },
            {
              "name": "begin_inline_lua_execution",
              "docs": "",
              "args": [
                {
                  "name": "script",
                  "ty": {
                    "Primitive": "String"
                  }
                }
              ],
              "ret": null
            }
          ],
          "events": []
        }
      ],
      "types": []
    }
  ]
}